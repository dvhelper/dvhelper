name: Run tests and upload coverage

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']
    env: 
      PYTHONIOENCODING: "utf-8"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Set up project dependencies
        run: |
          # Install poetry
          python -m pip install --upgrade pip
          pip install poetry

          # Set up poetry
          poetry config virtualenvs.in-project true
          poetry config cache-dir .cache/pypoetry

          # Install project dependencies
          poetry install

      - name: Cache project dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/.cache/pypoetry
            **/.venv
            **/poetry.lock
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-
        continue-on-error: true

      - name: Run tests
        run: poetry run pytest --cov --cov-branch --cov-report=xml

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: dvhelper/dvhelper
